# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_param_GemDroid', [dirname(__file__)])
        except ImportError:
            import _param_GemDroid
            return _param_GemDroid
        if fp is not None:
            try:
                _mod = imp.load_module('_param_GemDroid', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _param_GemDroid = swig_import_helper()
    del swig_import_helper
else:
    import _param_GemDroid
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import m5.internal.param_ClockedObject
import m5.internal.param_ClockDomain
import m5.internal.param_SimObject
import m5.internal.drain
import m5.internal.serialize
class GemDroid(m5.internal.param_ClockedObject.ClockedObject):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
GemDroid_swigregister = _param_GemDroid.GemDroid_swigregister
GemDroid_swigregister(GemDroid)

class GemDroidParams(m5.internal.param_ClockedObject.ClockedObjectParams):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def create(self): return _param_GemDroid.GemDroidParams_create(self)
    cpu_trace4 = _swig_property(_param_GemDroid.GemDroidParams_cpu_trace4_get, _param_GemDroid.GemDroidParams_cpu_trace4_set)
    cpu_trace2 = _swig_property(_param_GemDroid.GemDroidParams_cpu_trace2_get, _param_GemDroid.GemDroidParams_cpu_trace2_set)
    cpu_trace3 = _swig_property(_param_GemDroid.GemDroidParams_cpu_trace3_get, _param_GemDroid.GemDroidParams_cpu_trace3_set)
    cpu_trace1 = _swig_property(_param_GemDroid.GemDroidParams_cpu_trace1_get, _param_GemDroid.GemDroidParams_cpu_trace1_set)
    traceFile = _swig_property(_param_GemDroid.GemDroidParams_traceFile_get, _param_GemDroid.GemDroidParams_traceFile_set)
    num_ip_instances = _swig_property(_param_GemDroid.GemDroidParams_num_ip_instances_get, _param_GemDroid.GemDroidParams_num_ip_instances_set)
    cuttoffTime = _swig_property(_param_GemDroid.GemDroidParams_cuttoffTime_get, _param_GemDroid.GemDroidParams_cuttoffTime_set)
    range = _swig_property(_param_GemDroid.GemDroidParams_range_get, _param_GemDroid.GemDroidParams_range_set)
    ip_freq = _swig_property(_param_GemDroid.GemDroidParams_ip_freq_get, _param_GemDroid.GemDroidParams_ip_freq_set)
    issue_width = _swig_property(_param_GemDroid.GemDroidParams_issue_width_get, _param_GemDroid.GemDroidParams_issue_width_set)
    deviceConfigFile = _swig_property(_param_GemDroid.GemDroidParams_deviceConfigFile_get, _param_GemDroid.GemDroidParams_deviceConfigFile_set)
    filePath = _swig_property(_param_GemDroid.GemDroidParams_filePath_get, _param_GemDroid.GemDroidParams_filePath_set)
    perfect_memory = _swig_property(_param_GemDroid.GemDroidParams_perfect_memory_get, _param_GemDroid.GemDroidParams_perfect_memory_set)
    enableDebug = _swig_property(_param_GemDroid.GemDroidParams_enableDebug_get, _param_GemDroid.GemDroidParams_enableDebug_set)
    no_periodic_stats = _swig_property(_param_GemDroid.GemDroidParams_no_periodic_stats_get, _param_GemDroid.GemDroidParams_no_periodic_stats_set)
    dev_freq = _swig_property(_param_GemDroid.GemDroidParams_dev_freq_get, _param_GemDroid.GemDroidParams_dev_freq_set)
    sweep_val2 = _swig_property(_param_GemDroid.GemDroidParams_sweep_val2_get, _param_GemDroid.GemDroidParams_sweep_val2_set)
    gpu_trace = _swig_property(_param_GemDroid.GemDroidParams_gpu_trace_get, _param_GemDroid.GemDroidParams_gpu_trace_set)
    sweep_val1 = _swig_property(_param_GemDroid.GemDroidParams_sweep_val1_get, _param_GemDroid.GemDroidParams_sweep_val1_set)
    num_cpu_traces = _swig_property(_param_GemDroid.GemDroidParams_num_cpu_traces_get, _param_GemDroid.GemDroidParams_num_cpu_traces_set)
    core_freq = _swig_property(_param_GemDroid.GemDroidParams_core_freq_get, _param_GemDroid.GemDroidParams_core_freq_set)
    governor = _swig_property(_param_GemDroid.GemDroidParams_governor_get, _param_GemDroid.GemDroidParams_governor_set)
    systemConfigFile = _swig_property(_param_GemDroid.GemDroidParams_systemConfigFile_get, _param_GemDroid.GemDroidParams_systemConfigFile_set)
    enable_gemdroid = _swig_property(_param_GemDroid.GemDroidParams_enable_gemdroid_get, _param_GemDroid.GemDroidParams_enable_gemdroid_set)
    governor_timing = _swig_property(_param_GemDroid.GemDroidParams_governor_timing_get, _param_GemDroid.GemDroidParams_governor_timing_set)
    mem_freq = _swig_property(_param_GemDroid.GemDroidParams_mem_freq_get, _param_GemDroid.GemDroidParams_mem_freq_set)
    def __init__(self): 
        this = _param_GemDroid.new_GemDroidParams()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _param_GemDroid.delete_GemDroidParams
    __del__ = lambda self : None;
GemDroidParams_swigregister = _param_GemDroid.GemDroidParams_swigregister
GemDroidParams_swigregister(GemDroidParams)



