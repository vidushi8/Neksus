// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packet.proto

#ifndef PROTOBUF_packet_2eproto__INCLUDED
#define PROTOBUF_packet_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Message {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_packet_2eproto();
void protobuf_InitDefaults_packet_2eproto();
void protobuf_AssignDesc_packet_2eproto();
void protobuf_ShutdownFile_packet_2eproto();

class Packet;
class PacketHeader;

// ===================================================================

class PacketHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message.PacketHeader) */ {
 public:
  PacketHeader();
  virtual ~PacketHeader();

  PacketHeader(const PacketHeader& from);

  inline PacketHeader& operator=(const PacketHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PacketHeader& default_instance();

  static const PacketHeader* internal_default_instance();

  void Swap(PacketHeader* other);

  // implements Message ----------------------------------------------

  inline PacketHeader* New() const { return New(NULL); }

  PacketHeader* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PacketHeader& from);
  void MergeFrom(const PacketHeader& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PacketHeader* other);
  void UnsafeMergeFrom(const PacketHeader& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string obj_id = 1;
  bool has_obj_id() const;
  void clear_obj_id();
  static const int kObjIdFieldNumber = 1;
  const ::std::string& obj_id() const;
  void set_obj_id(const ::std::string& value);
  void set_obj_id(const char* value);
  void set_obj_id(const char* value, size_t size);
  ::std::string* mutable_obj_id();
  ::std::string* release_obj_id();
  void set_allocated_obj_id(::std::string* obj_id);

  // optional uint32 ver = 2 [default = 0];
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 2;
  ::google::protobuf::uint32 ver() const;
  void set_ver(::google::protobuf::uint32 value);

  // required uint64 tick_freq = 3;
  bool has_tick_freq() const;
  void clear_tick_freq();
  static const int kTickFreqFieldNumber = 3;
  ::google::protobuf::uint64 tick_freq() const;
  void set_tick_freq(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Message.PacketHeader)
 private:
  inline void set_has_obj_id();
  inline void clear_has_obj_id();
  inline void set_has_ver();
  inline void clear_has_ver();
  inline void set_has_tick_freq();
  inline void clear_has_tick_freq();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr obj_id_;
  ::google::protobuf::uint64 tick_freq_;
  ::google::protobuf::uint32 ver_;
  friend void  protobuf_InitDefaults_packet_2eproto_impl();
  friend void  protobuf_AddDesc_packet_2eproto_impl();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PacketHeader> PacketHeader_default_instance_;

// -------------------------------------------------------------------

class Packet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message.Packet) */ {
 public:
  Packet();
  virtual ~Packet();

  Packet(const Packet& from);

  inline Packet& operator=(const Packet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Packet& default_instance();

  static const Packet* internal_default_instance();

  void Swap(Packet* other);

  // implements Message ----------------------------------------------

  inline Packet* New() const { return New(NULL); }

  Packet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Packet& from);
  void MergeFrom(const Packet& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Packet* other);
  void UnsafeMergeFrom(const Packet& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tick = 1;
  bool has_tick() const;
  void clear_tick();
  static const int kTickFieldNumber = 1;
  ::google::protobuf::uint64 tick() const;
  void set_tick(::google::protobuf::uint64 value);

  // required uint32 cmd = 2;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  ::google::protobuf::uint32 cmd() const;
  void set_cmd(::google::protobuf::uint32 value);

  // required uint64 addr = 3;
  bool has_addr() const;
  void clear_addr();
  static const int kAddrFieldNumber = 3;
  ::google::protobuf::uint64 addr() const;
  void set_addr(::google::protobuf::uint64 value);

  // required uint32 size = 4;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // optional uint32 flags = 5;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 5;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // optional uint64 pkt_id = 6;
  bool has_pkt_id() const;
  void clear_pkt_id();
  static const int kPktIdFieldNumber = 6;
  ::google::protobuf::uint64 pkt_id() const;
  void set_pkt_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Message.Packet)
 private:
  inline void set_has_tick();
  inline void clear_has_tick();
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_addr();
  inline void clear_has_addr();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_pkt_id();
  inline void clear_has_pkt_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 tick_;
  ::google::protobuf::uint64 addr_;
  ::google::protobuf::uint32 cmd_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::uint64 pkt_id_;
  ::google::protobuf::uint32 flags_;
  friend void  protobuf_InitDefaults_packet_2eproto_impl();
  friend void  protobuf_AddDesc_packet_2eproto_impl();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Packet> Packet_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PacketHeader

// required string obj_id = 1;
inline bool PacketHeader::has_obj_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PacketHeader::set_has_obj_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PacketHeader::clear_has_obj_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PacketHeader::clear_obj_id() {
  obj_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj_id();
}
inline const ::std::string& PacketHeader::obj_id() const {
  // @@protoc_insertion_point(field_get:Message.PacketHeader.obj_id)
  return obj_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHeader::set_obj_id(const ::std::string& value) {
  set_has_obj_id();
  obj_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.PacketHeader.obj_id)
}
inline void PacketHeader::set_obj_id(const char* value) {
  set_has_obj_id();
  obj_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.PacketHeader.obj_id)
}
inline void PacketHeader::set_obj_id(const char* value, size_t size) {
  set_has_obj_id();
  obj_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.PacketHeader.obj_id)
}
inline ::std::string* PacketHeader::mutable_obj_id() {
  set_has_obj_id();
  // @@protoc_insertion_point(field_mutable:Message.PacketHeader.obj_id)
  return obj_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PacketHeader::release_obj_id() {
  // @@protoc_insertion_point(field_release:Message.PacketHeader.obj_id)
  clear_has_obj_id();
  return obj_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHeader::set_allocated_obj_id(::std::string* obj_id) {
  if (obj_id != NULL) {
    set_has_obj_id();
  } else {
    clear_has_obj_id();
  }
  obj_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj_id);
  // @@protoc_insertion_point(field_set_allocated:Message.PacketHeader.obj_id)
}

// optional uint32 ver = 2 [default = 0];
inline bool PacketHeader::has_ver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PacketHeader::set_has_ver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PacketHeader::clear_has_ver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PacketHeader::clear_ver() {
  ver_ = 0u;
  clear_has_ver();
}
inline ::google::protobuf::uint32 PacketHeader::ver() const {
  // @@protoc_insertion_point(field_get:Message.PacketHeader.ver)
  return ver_;
}
inline void PacketHeader::set_ver(::google::protobuf::uint32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:Message.PacketHeader.ver)
}

// required uint64 tick_freq = 3;
inline bool PacketHeader::has_tick_freq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PacketHeader::set_has_tick_freq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PacketHeader::clear_has_tick_freq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PacketHeader::clear_tick_freq() {
  tick_freq_ = GOOGLE_ULONGLONG(0);
  clear_has_tick_freq();
}
inline ::google::protobuf::uint64 PacketHeader::tick_freq() const {
  // @@protoc_insertion_point(field_get:Message.PacketHeader.tick_freq)
  return tick_freq_;
}
inline void PacketHeader::set_tick_freq(::google::protobuf::uint64 value) {
  set_has_tick_freq();
  tick_freq_ = value;
  // @@protoc_insertion_point(field_set:Message.PacketHeader.tick_freq)
}

inline const PacketHeader* PacketHeader::internal_default_instance() {
  return &PacketHeader_default_instance_.get();
}
// -------------------------------------------------------------------

// Packet

// required uint64 tick = 1;
inline bool Packet::has_tick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Packet::set_has_tick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Packet::clear_has_tick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Packet::clear_tick() {
  tick_ = GOOGLE_ULONGLONG(0);
  clear_has_tick();
}
inline ::google::protobuf::uint64 Packet::tick() const {
  // @@protoc_insertion_point(field_get:Message.Packet.tick)
  return tick_;
}
inline void Packet::set_tick(::google::protobuf::uint64 value) {
  set_has_tick();
  tick_ = value;
  // @@protoc_insertion_point(field_set:Message.Packet.tick)
}

// required uint32 cmd = 2;
inline bool Packet::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Packet::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Packet::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Packet::clear_cmd() {
  cmd_ = 0u;
  clear_has_cmd();
}
inline ::google::protobuf::uint32 Packet::cmd() const {
  // @@protoc_insertion_point(field_get:Message.Packet.cmd)
  return cmd_;
}
inline void Packet::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Message.Packet.cmd)
}

// required uint64 addr = 3;
inline bool Packet::has_addr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Packet::set_has_addr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Packet::clear_has_addr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Packet::clear_addr() {
  addr_ = GOOGLE_ULONGLONG(0);
  clear_has_addr();
}
inline ::google::protobuf::uint64 Packet::addr() const {
  // @@protoc_insertion_point(field_get:Message.Packet.addr)
  return addr_;
}
inline void Packet::set_addr(::google::protobuf::uint64 value) {
  set_has_addr();
  addr_ = value;
  // @@protoc_insertion_point(field_set:Message.Packet.addr)
}

// required uint32 size = 4;
inline bool Packet::has_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Packet::set_has_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Packet::clear_has_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Packet::clear_size() {
  size_ = 0u;
  clear_has_size();
}
inline ::google::protobuf::uint32 Packet::size() const {
  // @@protoc_insertion_point(field_get:Message.Packet.size)
  return size_;
}
inline void Packet::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:Message.Packet.size)
}

// optional uint32 flags = 5;
inline bool Packet::has_flags() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Packet::set_has_flags() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Packet::clear_has_flags() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Packet::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 Packet::flags() const {
  // @@protoc_insertion_point(field_get:Message.Packet.flags)
  return flags_;
}
inline void Packet::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:Message.Packet.flags)
}

// optional uint64 pkt_id = 6;
inline bool Packet::has_pkt_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Packet::set_has_pkt_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Packet::clear_has_pkt_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Packet::clear_pkt_id() {
  pkt_id_ = GOOGLE_ULONGLONG(0);
  clear_has_pkt_id();
}
inline ::google::protobuf::uint64 Packet::pkt_id() const {
  // @@protoc_insertion_point(field_get:Message.Packet.pkt_id)
  return pkt_id_;
}
inline void Packet::set_pkt_id(::google::protobuf::uint64 value) {
  set_has_pkt_id();
  pkt_id_ = value;
  // @@protoc_insertion_point(field_set:Message.Packet.pkt_id)
}

inline const Packet* Packet::internal_default_instance() {
  return &Packet_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_packet_2eproto__INCLUDED
